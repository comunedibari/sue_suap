CREATE PROCEDURE updateDb(out _log text)
BEGIN

	declare _output text default '';
	declare _engine varchar(64);

	declare continue handler for 1050 begin end;
	declare continue handler for 1060 begin end;

	set foreign_key_checks = 0;
	
	set @newline = char(13);

	set _output = concat(_output, @newline, 'Updating version table...', @newline);
	
	update _version set major_number = 2, minor_number = 2, _date = now();
	
	set _output = concat(_output, @newline, 'Altering pc_configuration, adding scheduler scope...', @newline);

  ALTER TABLE pc_configuration CHANGE _scope _scope ENUM('security','mail','general','monitoring','scheduler') NOT NULL;
  
  set _output = concat(_output, @newline, 'Populating pc_configuration table with schedueler configuration...', @newline);
  
  INSERT INTO pc_configuration (_key, _type, _scope, _value, _label , _description)
  VALUES ('consoleInfoUpdateTrigger', 'String', 'scheduler', '2', 'Aggiorna le informazione della People Console','Frequenza di aggiornamento delle informazioni restituite dalla console (Minuti)');
  
  set _output = concat(_output, @newline, 'Creating QUARTZ Scheduler tables...', @newline);
  

    DROP TABLE IF EXISTS PC_QRTZ_FIRED_TRIGGERS;
	DROP TABLE IF EXISTS PC_QRTZ_PAUSED_TRIGGER_GRPS;
	DROP TABLE IF EXISTS PC_QRTZ_SCHEDULER_STATE;
	DROP TABLE IF EXISTS PC_QRTZ_LOCKS;
	DROP TABLE IF EXISTS PC_QRTZ_SIMPLE_TRIGGERS;
	DROP TABLE IF EXISTS PC_QRTZ_SIMPROP_TRIGGERS;
	DROP TABLE IF EXISTS PC_QRTZ_CRON_TRIGGERS;
	DROP TABLE IF EXISTS PC_QRTZ_BLOB_TRIGGERS;
	DROP TABLE IF EXISTS PC_QRTZ_TRIGGERS;
	DROP TABLE IF EXISTS PC_QRTZ_JOB_DETAILS;
	DROP TABLE IF EXISTS PC_QRTZ_CALENDARS;
	
	CREATE TABLE PC_QRTZ_JOB_DETAILS(
		SCHED_NAME VARCHAR(80) NOT NULL,
		JOB_NAME VARCHAR(80) NOT NULL,
		JOB_GROUP VARCHAR(80) NOT NULL,
		DESCRIPTION VARCHAR(250) NULL,
		JOB_CLASS_NAME VARCHAR(250) NOT NULL,
		IS_DURABLE VARCHAR(1) NOT NULL,
		IS_NONCONCURRENT VARCHAR(1) NOT NULL,
		IS_UPDATE_DATA VARCHAR(1) NOT NULL,
		REQUESTS_RECOVERY VARCHAR(1) NOT NULL,
		JOB_DATA BLOB NULL,
		PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)) ENGINE=InnoDB DEFAULT CHARSET=utf8;
	
	CREATE TABLE PC_QRTZ_TRIGGERS (
		SCHED_NAME VARCHAR(80) NOT NULL,
		TRIGGER_NAME VARCHAR(80) NOT NULL,
		TRIGGER_GROUP VARCHAR(80) NOT NULL,
		JOB_NAME VARCHAR(200) NOT NULL,
		JOB_GROUP VARCHAR(200) NOT NULL,
		DESCRIPTION VARCHAR(250) NULL,
		NEXT_FIRE_TIME BIGINT(13) NULL,
		PREV_FIRE_TIME BIGINT(13) NULL,
		PRIORITY INTEGER NULL,
		TRIGGER_STATE VARCHAR(16) NOT NULL,
		TRIGGER_TYPE VARCHAR(8) NOT NULL,
		START_TIME BIGINT(13) NOT NULL,
		END_TIME BIGINT(13) NULL,
		CALENDAR_NAME VARCHAR(200) NULL,
		MISFIRE_INSTR SMALLINT(2) NULL,
		JOB_DATA BLOB NULL,
		PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
		INDEX (SCHED_NAME,JOB_NAME, JOB_GROUP),
		FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
		REFERENCES PC_QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP)) ENGINE=InnoDB DEFAULT CHARSET=utf8;
	
	CREATE TABLE PC_QRTZ_SIMPLE_TRIGGERS (
		SCHED_NAME VARCHAR(80) NOT NULL,
		TRIGGER_NAME VARCHAR(80) NOT NULL,
		TRIGGER_GROUP VARCHAR(80) NOT NULL,
		REPEAT_COUNT BIGINT(7) NOT NULL,
		REPEAT_INTERVAL BIGINT(12) NOT NULL,
		TIMES_TRIGGERED BIGINT(10) NOT NULL,
		PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
		INDEX (SCHED_NAME,TRIGGER_NAME, TRIGGER_GROUP),
		FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
		REFERENCES PC_QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)) ENGINE=InnoDB DEFAULT CHARSET=utf8;
	
	CREATE TABLE PC_QRTZ_CRON_TRIGGERS (
		SCHED_NAME VARCHAR(80) NOT NULL,
		TRIGGER_NAME VARCHAR(80) NOT NULL,
		TRIGGER_GROUP VARCHAR(80) NOT NULL,
		CRON_EXPRESSION VARCHAR(120) NOT NULL,
		TIME_ZONE_ID VARCHAR(80),
		PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
		INDEX (SCHED_NAME,TRIGGER_NAME, TRIGGER_GROUP),
		FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
		REFERENCES PC_QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)) ENGINE=InnoDB DEFAULT CHARSET=utf8;
	
	CREATE TABLE PC_QRTZ_SIMPROP_TRIGGERS (          
	    SCHED_NAME VARCHAR(80) NOT NULL,
	    TRIGGER_NAME VARCHAR(80) NOT NULL,
	    TRIGGER_GROUP VARCHAR(80) NOT NULL,
	    STR_PROP_1 VARCHAR(512) NULL,
	    STR_PROP_2 VARCHAR(512) NULL,
	    STR_PROP_3 VARCHAR(512) NULL,
	    INT_PROP_1 INT NULL,
	    INT_PROP_2 INT NULL,
	    LONG_PROP_1 BIGINT NULL,
	    LONG_PROP_2 BIGINT NULL,
	    DEC_PROP_1 NUMERIC(13,4) NULL,
	    DEC_PROP_2 NUMERIC(13,4) NULL,
	    BOOL_PROP_1 VARCHAR(1) NULL,
	    BOOL_PROP_2 VARCHAR(1) NULL,
	    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
	    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	    REFERENCES PC_QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)) ENGINE=InnoDB DEFAULT CHARSET=utf8;
	
	CREATE TABLE PC_QRTZ_BLOB_TRIGGERS (
		SCHED_NAME VARCHAR(80) NOT NULL,
		TRIGGER_NAME VARCHAR(80) NOT NULL,
		TRIGGER_GROUP VARCHAR(80) NOT NULL,
		BLOB_DATA BLOB NULL,
		PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
		INDEX (SCHED_NAME,TRIGGER_NAME, TRIGGER_GROUP),
		FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
		REFERENCES PC_QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)) ENGINE=InnoDB DEFAULT CHARSET=utf8;
	
	CREATE TABLE PC_QRTZ_CALENDARS (
		SCHED_NAME VARCHAR(120) NOT NULL,
		CALENDAR_NAME VARCHAR(130) NOT NULL,
		CALENDAR BLOB NOT NULL,
		PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)) ENGINE=InnoDB DEFAULT CHARSET=utf8;
	
	CREATE TABLE PC_QRTZ_PAUSED_TRIGGER_GRPS (
		SCHED_NAME VARCHAR(120) NOT NULL,
		TRIGGER_GROUP VARCHAR(130) NOT NULL,
		PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)) ENGINE=InnoDB DEFAULT CHARSET=utf8;
		
	CREATE TABLE PC_QRTZ_FIRED_TRIGGERS (
		SCHED_NAME VARCHAR(120) NOT NULL,
		ENTRY_ID VARCHAR(95) NOT NULL,
		TRIGGER_NAME VARCHAR(200) NOT NULL,
		TRIGGER_GROUP VARCHAR(200) NOT NULL,
		INSTANCE_NAME VARCHAR(200) NOT NULL,
		FIRED_TIME BIGINT(13) NOT NULL,
		PRIORITY INTEGER NOT NULL,
		STATE VARCHAR(16) NOT NULL,
		JOB_NAME VARCHAR(200) NULL,
		JOB_GROUP VARCHAR(200) NULL,
		IS_NONCONCURRENT VARCHAR(1) NULL,
		REQUESTS_RECOVERY VARCHAR(1) NULL,
		PRIMARY KEY (SCHED_NAME,ENTRY_ID)) ENGINE=InnoDB DEFAULT CHARSET=utf8;
	
	CREATE TABLE PC_QRTZ_SCHEDULER_STATE (
		SCHED_NAME VARCHAR(100) NOT NULL,
		INSTANCE_NAME VARCHAR(155) NOT NULL,
		LAST_CHECKIN_TIME BIGINT(13) NOT NULL,
		CHECKIN_INTERVAL BIGINT(13) NOT NULL,
		PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)) ENGINE=InnoDB DEFAULT CHARSET=utf8;
	
	CREATE TABLE PC_QRTZ_LOCKS (
		SCHED_NAME VARCHAR(120) NOT NULL,
		LOCK_NAME VARCHAR(40) NOT NULL,
		PRIMARY KEY (SCHED_NAME,LOCK_NAME)) ENGINE=InnoDB DEFAULT CHARSET=utf8;
	
	CREATE INDEX IDX_QRTZ_J_REQ_RECOVERY ON PC_QRTZ_JOB_DETAILS(SCHED_NAME,REQUESTS_RECOVERY);
	CREATE INDEX IDX_QRTZ_J_GRP ON PC_QRTZ_JOB_DETAILS(SCHED_NAME,JOB_GROUP);
	
	CREATE INDEX IDX_QRTZ_T_J ON PC_QRTZ_TRIGGERS(SCHED_NAME,JOB_NAME,JOB_GROUP);
	CREATE INDEX IDX_QRTZ_T_JG ON PC_QRTZ_TRIGGERS(SCHED_NAME,JOB_GROUP);
	CREATE INDEX IDX_QRTZ_T_C ON PC_QRTZ_TRIGGERS(SCHED_NAME,CALENDAR_NAME);
	CREATE INDEX IDX_QRTZ_T_G ON PC_QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_GROUP);
	CREATE INDEX IDX_QRTZ_T_STATE ON PC_QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_STATE);
	CREATE INDEX IDX_QRTZ_T_N_STATE ON PC_QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
	CREATE INDEX IDX_QRTZ_T_N_G_STATE ON PC_QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
	CREATE INDEX IDX_QRTZ_T_NEXT_FIRE_TIME ON PC_QRTZ_TRIGGERS(SCHED_NAME,NEXT_FIRE_TIME);
	CREATE INDEX IDX_QRTZ_T_NFT_ST ON PC_QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
	CREATE INDEX IDX_QRTZ_T_NFT_MISFIRE ON PC_QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
	CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE ON PC_QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
	CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE_GRP ON PC_QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
	
	CREATE INDEX IDX_QRTZ_FT_TRIG_INST_NAME ON PC_QRTZ_FIRED_TRIGGERS(SCHED_NAME,INSTANCE_NAME);
	CREATE INDEX IDX_QRTZ_FT_INST_JOB_REQ_RCVRY ON PC_QRTZ_FIRED_TRIGGERS(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
	CREATE INDEX IDX_QRTZ_FT_J_G ON PC_QRTZ_FIRED_TRIGGERS(SCHED_NAME,JOB_NAME,JOB_GROUP);
	CREATE INDEX IDX_QRTZ_FT_JG ON PC_QRTZ_FIRED_TRIGGERS(SCHED_NAME,JOB_GROUP);
	CREATE INDEX IDX_QRTZ_FT_T_G ON PC_QRTZ_FIRED_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
	CREATE INDEX IDX_QRTZ_FT_TG ON PC_QRTZ_FIRED_TRIGGERS(SCHED_NAME,TRIGGER_GROUP);
  
  set foreign_key_checks = 1;
  
  set _log = _output;
  
END