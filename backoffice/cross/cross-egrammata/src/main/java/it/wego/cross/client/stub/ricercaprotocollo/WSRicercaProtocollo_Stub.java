// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3
package it.wego.cross.client.stub.ricercaprotocollo;

import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.soap.streaming.*;
import com.sun.xml.rpc.soap.message.*;
import javax.xml.namespace.QName;
import java.rmi.RemoteException;
import com.sun.xml.rpc.client.SenderException;
import com.sun.xml.rpc.client.*;
import com.sun.xml.rpc.client.http.*;
import it.wego.cross.client.transport.EGrammataTransport;
import javax.xml.rpc.handler.*;
import javax.xml.rpc.JAXRPCException;

public class WSRicercaProtocollo_Stub
        extends com.sun.xml.rpc.client.StubBase
        implements it.wego.cross.client.stub.ricercaprotocollo.WSRicercaProtocollo {

    private Integer TIMEOUT = 60000;

    /*
     *  public constructor
     */
    public WSRicercaProtocollo_Stub(HandlerChain handlerChain, Integer timeout) {
        super(handlerChain);
        if (timeout != null && timeout > 0) {
            this.TIMEOUT = timeout;
        }
        _setProperty(ENDPOINT_ADDRESS_PROPERTY, "http://protocollotest.comune.genova.it/axis/services/WSRicercaProtocollo");
    }

    /*
     *  implementation of ricerca
     */
    public java.lang.String ricerca(java.lang.String codEnte, java.lang.String userid, java.lang.String password, java.lang.String indirizzoIP, java.lang.String xml, java.lang.String hash)
            throws java.rmi.RemoteException {

        try {

            StreamingSenderState _state = _start(_handlerChain);

            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(ricerca_OPCODE);
            it.wego.cross.client.stub.ricercaprotocollo.WSRicercaProtocollo_ricerca_RequestStruct _myWSRicercaProtocollo_ricerca_RequestStruct =
                    new it.wego.cross.client.stub.ricercaprotocollo.WSRicercaProtocollo_ricerca_RequestStruct();

            _myWSRicercaProtocollo_ricerca_RequestStruct.setCodEnte(codEnte);
            _myWSRicercaProtocollo_ricerca_RequestStruct.setUserid(userid);
            _myWSRicercaProtocollo_ricerca_RequestStruct.setPassword(password);
            _myWSRicercaProtocollo_ricerca_RequestStruct.setIndirizzoIP(indirizzoIP);
            _myWSRicercaProtocollo_ricerca_RequestStruct.setXml(xml);
            _myWSRicercaProtocollo_ricerca_RequestStruct.setHash(hash);

            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_ricerca_ricerca_QNAME);
            _bodyBlock.setValue(_myWSRicercaProtocollo_ricerca_RequestStruct);
            _bodyBlock.setSerializer(ns1_myWSRicercaProtocollo_ricerca_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);

            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");

            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);

            it.wego.cross.client.stub.ricercaprotocollo.WSRicercaProtocollo_ricerca_ResponseStruct _myWSRicercaProtocollo_ricerca_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myWSRicercaProtocollo_ricerca_ResponseStruct =
                        (it.wego.cross.client.stub.ricercaprotocollo.WSRicercaProtocollo_ricerca_ResponseStruct) ((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _myWSRicercaProtocollo_ricerca_ResponseStruct =
                        (it.wego.cross.client.stub.ricercaprotocollo.WSRicercaProtocollo_ricerca_ResponseStruct) _responseObj;
            }

            return _myWSRicercaProtocollo_ricerca_ResponseStruct.getRicercaReturn();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException) e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }

    /*
     *  this method deserializes the request/response structure in the body
     */
    @Override
    protected void _readFirstBodyElement(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        int opcode = state.getRequest().getOperationCode();
        switch (opcode) {
            case ricerca_OPCODE:
                _deserialize_ricerca(bodyReader, deserializationContext, state);
                break;
            default:
                throw new SenderException("sender.response.unrecognizedOperation", java.lang.Integer.toString(opcode));
        }
    }

    /*
     * This method deserializes the body of the ricerca operation.
     */
    private void _deserialize_ricerca(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myWSRicercaProtocollo_ricerca_ResponseStructObj =
                ns2_myWSRicercaProtocollo_ricerca_ResponseStruct_SOAPSerializer.deserialize(ns2_ricerca_ricercaResponse_QNAME,
                bodyReader, deserializationContext);

        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns2_ricerca_ricercaResponse_QNAME);
        bodyBlock.setValue(myWSRicercaProtocollo_ricerca_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }

    @Override
    public java.lang.String _getDefaultEnvelopeEncodingStyle() {
        return SOAPNamespaceConstants.ENCODING;
    }

    @Override
    public java.lang.String _getImplicitEnvelopeEncodingStyle() {
        return "";
    }

    public java.lang.String _getEncodingStyle() {
        return SOAPNamespaceConstants.ENCODING;
    }

    public void _setEncodingStyle(java.lang.String encodingStyle) {
        throw new UnsupportedOperationException("cannot set encoding style");
    }

    /*
     * This method returns an array containing (prefix, nsURI) pairs.
     */
    @Override
    protected java.lang.String[] _getNamespaceDeclarations() {
        return myNamespace_declarations;
    }

    /*
     * This method returns an array containing the names of the headers we understand.
     */
    @Override
    public javax.xml.namespace.QName[] _getUnderstoodHeaders() {
        return understoodHeaderNames;
    }

    @Override
    public void _initialize(InternalTypeMappingRegistry registry) throws Exception {
        super._initialize(registry);
        ns1_myWSRicercaProtocollo_ricerca_RequestStruct_SOAPSerializer = (CombinedSerializer) registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, it.wego.cross.client.stub.ricercaprotocollo.WSRicercaProtocollo_ricerca_RequestStruct.class, ns1_ricerca_TYPE_QNAME);
        ns2_myWSRicercaProtocollo_ricerca_ResponseStruct_SOAPSerializer = (CombinedSerializer) registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, it.wego.cross.client.stub.ricercaprotocollo.WSRicercaProtocollo_ricerca_ResponseStruct.class, ns2_ricercaResponse_TYPE_QNAME);
    }
    private static final javax.xml.namespace.QName _portName = new QName("http://protocollotest.comune.genova.it/axis/services/WSRicercaProtocollo", "WSRicercaProtocollo");
    private static final int ricerca_OPCODE = 0;
    private static final javax.xml.namespace.QName ns1_ricerca_ricerca_QNAME = new QName("http://protocollo.webservices.eng", "ricerca");
    private static final javax.xml.namespace.QName ns1_ricerca_TYPE_QNAME = new QName("http://protocollo.webservices.eng", "ricerca");
    private CombinedSerializer ns1_myWSRicercaProtocollo_ricerca_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns2_ricerca_ricercaResponse_QNAME = new QName("http://protocollotest.comune.genova.it/axis/services/WSRicercaProtocollo", "ricercaResponse");
    private static final javax.xml.namespace.QName ns2_ricercaResponse_TYPE_QNAME = new QName("http://protocollotest.comune.genova.it/axis/services/WSRicercaProtocollo", "ricercaResponse");
    private CombinedSerializer ns2_myWSRicercaProtocollo_ricerca_ResponseStruct_SOAPSerializer;
    private static final java.lang.String[] myNamespace_declarations =
            new java.lang.String[]{
        "ns0", "http://protocollo.webservices.eng",
        "ns1", "http://protocollotest.comune.genova.it/axis/services/WSRicercaProtocollo"
    };
    private static final QName[] understoodHeaderNames = new QName[]{};

    @Override
    protected ClientTransport _getTransport() {
        EGrammataTransport transport = new EGrammataTransport(TIMEOUT);
        return transport;
    }
}
