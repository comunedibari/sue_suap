package it.wego.cross.avbari.linksmt.fascicolo;

import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.core.io.ClassPathResource;
import org.springframework.core.io.Resource;

/**
 * This class was generated by Apache CXF 2.3.9
 * 2015-03-02T16:02:20.147+01:00
 * Generated source version: 2.3.9
 * 
 */
@WebServiceClient(name = "FascicoloServerImplService", 
                   //LOCALE E TEST
				   //wsdlLocation = "fascicolo.wsdl",
                   //PRODUZIONE
				   //wsdlLocation = "http://web99.linksmt.it/adoc/fascicolo?wsdl",
                  targetNamespace = "http://impl.server.ws.protocollo.linksmt.it/") 
public class FascicoloServerImplService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://impl.server.ws.protocollo.linksmt.it/", "FascicoloServerImplService");
    public final static QName FascicoloServerImplPort = new QName("http://impl.server.ws.protocollo.linksmt.it/", "FascicoloServerImplPort");
    private static final Logger logger = LoggerFactory.getLogger(FascicoloServerImplService.class.getName());
    //LOCALE E TEST
//    static {
//        	URL url = FascicoloServerImplService.class.getResource("fascicolo-wsdl/fascicolo.wsdl");
//    		System.out.println("fascicolo.wsdl path:"+url);
//            WSDL_LOCATION = url;
//     
//    }
    
    //PRODUZIONE
    static {
        URL url = null;
        String wsdlClasspathUrl = "it/wego/cross/avbari/linksmt/wsdl_produzione/02_05_2018/fascicolo/wsdl_fascicolo.wsdl";
        try {
        	Resource res = new ClassPathResource(wsdlClasspathUrl);
            url = res.getURL();
        } catch (Exception e) {
        	logger.warn("Impossibile inizializzare l'URL del WS di fascicolazione {} ", wsdlClasspathUrl, e);
        }
        WSDL_LOCATION = url;
    }


    public FascicoloServerImplService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public FascicoloServerImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public FascicoloServerImplService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public FascicoloServerImplService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public FascicoloServerImplService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public FascicoloServerImplService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns FascicoloServer
     */
    @WebEndpoint(name = "FascicoloServerImplPort")
    public FascicoloServer getFascicoloServerImplPort() {
        return super.getPort(FascicoloServerImplPort, FascicoloServer.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns FascicoloServer
     */
    @WebEndpoint(name = "FascicoloServerImplPort")
    public FascicoloServer getFascicoloServerImplPort(WebServiceFeature... features) {
        return super.getPort(FascicoloServerImplPort, FascicoloServer.class, features);
    }

}
