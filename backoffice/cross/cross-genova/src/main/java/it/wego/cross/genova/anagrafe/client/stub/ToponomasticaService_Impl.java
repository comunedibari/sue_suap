// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3
package it.wego.cross.genova.anagrafe.client.stub;

import com.sun.xml.rpc.client.ServiceExceptionImpl;
import com.sun.xml.rpc.util.exception.*;
import com.sun.xml.rpc.client.HandlerChainImpl;
import javax.xml.rpc.*;
import javax.xml.namespace.QName;

public class ToponomasticaService_Impl extends com.sun.xml.rpc.client.BasicService implements ToponomasticaService {

    private static final QName serviceName = new QName("http://wstoponomastica.comune.genova.it:8080/toponomastica/Toponomastica.jws", "ToponomasticaService");
    private static final QName ns1_Toponomastica_QNAME = new QName("http://wstoponomastica.comune.genova.it:8080/toponomastica/Toponomastica.jws", "Toponomastica");
    private static final Class toponomastica_PortClass = Toponomastica.class;

    public ToponomasticaService_Impl() {
        super(serviceName, new QName[]{
                    ns1_Toponomastica_QNAME
                },
                new ToponomasticaService_SerializerRegistry().getRegistry());

    }

    public java.rmi.Remote getPort(javax.xml.namespace.QName portName, java.lang.Class serviceDefInterface) throws javax.xml.rpc.ServiceException {
        try {
            if (portName.equals(ns1_Toponomastica_QNAME)
                    && serviceDefInterface.equals(toponomastica_PortClass)) {
                return getToponomastica();
            }
        } catch (Exception e) {
            throw new ServiceExceptionImpl(new LocalizableExceptionAdapter(e));
        }
        return super.getPort(portName, serviceDefInterface);
    }

    public java.rmi.Remote getPort(java.lang.Class serviceDefInterface) throws javax.xml.rpc.ServiceException {
        try {
            if (serviceDefInterface.equals(toponomastica_PortClass)) {
                return getToponomastica();
            }
        } catch (Exception e) {
            throw new ServiceExceptionImpl(new LocalizableExceptionAdapter(e));
        }
        return super.getPort(serviceDefInterface);
    }

    public Toponomastica getToponomastica() {
        java.lang.String[] roles = new java.lang.String[]{};
        HandlerChainImpl handlerChain = new HandlerChainImpl(getHandlerRegistry().getHandlerChain(ns1_Toponomastica_QNAME));
        handlerChain.setRoles(roles);
        Toponomastica_Stub stub = new Toponomastica_Stub(handlerChain);
        try {
            stub._initialize(super.internalTypeRegistry);
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            throw new JAXRPCException(e.getMessage(), e);
        }
        return stub;
    }
}
