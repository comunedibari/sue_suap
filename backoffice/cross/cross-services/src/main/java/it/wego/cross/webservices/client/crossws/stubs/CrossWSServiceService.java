package it.wego.cross.webservices.client.crossws.stubs;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.6-1b01 Generated
 * source version: 2.2
 *
 */
@WebServiceClient(name = "CrossWSServiceService", targetNamespace = "http://webservice.backend.people.it/", wsdlLocation = "http://genova.wego.it/cross-ws/services/CrossService?wsdl")
public class CrossWSServiceService
        extends Service {

    private final static URL CROSSWSSERVICESERVICE_WSDL_LOCATION;
    private final static WebServiceException CROSSWSSERVICESERVICE_EXCEPTION;
    private final static QName CROSSWSSERVICESERVICE_QNAME = new QName("http://webservice.backend.people.it/", "CrossWSServiceService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://genova.wego.it/cross-ws/services/CrossService?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        CROSSWSSERVICESERVICE_WSDL_LOCATION = url;
        CROSSWSSERVICESERVICE_EXCEPTION = e;
    }

    public CrossWSServiceService() {
        super(__getWsdlLocation(), CROSSWSSERVICESERVICE_QNAME);
    }

    public CrossWSServiceService(WebServiceFeature... features) {
        super(__getWsdlLocation(), CROSSWSSERVICESERVICE_QNAME, features);
    }

    public CrossWSServiceService(URL wsdlLocation) {
        super(wsdlLocation, CROSSWSSERVICESERVICE_QNAME);
    }

    public CrossWSServiceService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, CROSSWSSERVICESERVICE_QNAME, features);
    }

    public CrossWSServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CrossWSServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return returns CrossWSService
     */
    @WebEndpoint(name = "CrossWSService")
    public CrossWSService getCrossWSService() {
        return super.getPort(new QName("http://webservice.backend.people.it/", "CrossWSService"), CrossWSService.class);
    }

    /**
     *
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to
     * configure on the proxy. Supported features not in the
     * <code>features</code> parameter will have their default values.
     * @return returns CrossWSService
     */
    @WebEndpoint(name = "CrossWSService")
    public CrossWSService getCrossWSService(WebServiceFeature... features) {
        return super.getPort(new QName("http://webservice.backend.people.it/", "CrossWSService"), CrossWSService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (CROSSWSSERVICESERVICE_EXCEPTION != null) {
            throw CROSSWSSERVICESERVICE_EXCEPTION;
        }
        return CROSSWSSERVICESERVICE_WSDL_LOCATION;
    }

}
