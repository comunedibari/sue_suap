
package it.wego.cross.webservices.client.Reporter.stubs;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "Reporter", targetNamespace = "http://it.reporter.dynamicodt", wsdlLocation = "http://demonew.wego.it/reporter/Reporter?wsdl")
public class Reporter extends Service{

    private final static URL REPORTER_WSDL_LOCATION;
    private final static WebServiceException REPORTER_EXCEPTION;
    private final static QName REPORTER_QNAME = new QName("http://it.reporter.dynamicodt", "Reporter");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://demonew.wego.it/reporter/Reporter?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        REPORTER_WSDL_LOCATION = url;
        REPORTER_EXCEPTION = e;
    }

    public Reporter() {
        super(__getWsdlLocation(), REPORTER_QNAME);
    }


    public Reporter(URL wsdlLocation) {
        super(wsdlLocation, REPORTER_QNAME);
    }


    public Reporter(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }


    /**
     * 
     * @return
     *     returns ReporterPortType
     */
    @WebEndpoint(name = "ReporterSOAP11port_http")
    public ReporterPortType getReporterSOAP11PortHttp() {
        return super.getPort(new QName("http://it.reporter.dynamicodt", "ReporterSOAP11port_http"), ReporterPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ReporterPortType
     */
    @WebEndpoint(name = "ReporterSOAP11port_http")
    public ReporterPortType getReporterSOAP11PortHttp(WebServiceFeature... features) {
        return super.getPort(new QName("http://it.reporter.dynamicodt", "ReporterSOAP11port_http"), ReporterPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (REPORTER_EXCEPTION!= null) {
            throw REPORTER_EXCEPTION;
        }
        return REPORTER_WSDL_LOCATION;
    }

}
